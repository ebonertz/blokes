var BaseService, TypeService, _,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

_ = require('underscore');

BaseService = require('./base');

TypeService = (function(superClass) {
  extend(TypeService, superClass);

  function TypeService() {
    return TypeService.__super__.constructor.apply(this, arguments);
  }

  TypeService.baseResourceEndpoint = '/types';

  TypeService.supportsByKey = true;

  return TypeService;

})(BaseService);

module.exports = TypeService;
